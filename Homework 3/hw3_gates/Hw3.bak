library IEEE;
use IEEE.std_logic_1164.all;

entity f3 is
  port(A   : in std_logic;
       B   : in std_logic;
       C   : in std_logic;
       D   : in std_logic;
       F  : out std_logic);
end f3;

architecture structural of f3 is
  
  --component declarations
  component and2 is
    generic(Tp : time := 2 ns);
    port(in1  : in std_logic;
         in2  : in std_logic;
         out1 : out std_logic);
  end component;
  
  component or2 is
    generic(Tp : time := 2 ns);
    port(in1  : in std_logic;
         in2  : in std_logic;
         out1 : out std_logic);
  end component;
  
  component inv is
    generic(Tp : time := 1 ns);
    port(in1  : in std_logic;
         out1 : out std_logic);
  end component;
  
  for all : and2 use entity work.and2(simple);
  for all : or2 use entity work.or2(simple);
  for all : inv use entity work.inv(simple);
  
  --signal statements
  signal sig1,  sig2,  sig3,  sig4,  sig5,
         sig6,  sig7,  sig8,  sig9,  sig10,
         sig11, sig12, sig13, sig14  : std_logic;
  
  beginNOT_1 : inv generic map(Tp => 1 ns)
                port map(in1 => A,
                        out1 => sig1);
                        
    NOT_2 : inv generic map(Tp => 1 ns)
                port map(in1 => B,
                        out1 => sig2);
                        
    NOT_3 : inv generic map(Tp => 1 ns)
                port map(in1 => C,
                        out1 => sig3);
                        
    NOT_4 : inv generic map(Tp => 1 ns)
                port map(in1 => D,
                        out1 => sig4);  